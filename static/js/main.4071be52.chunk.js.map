{"version":3,"sources":["img/logo.png","components/ui/Header.js","img/spinner.gif","components/ui/Spinner.js","components/Items/Item.js","components/Items/ItemGrid.js","components/ui/Search.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","logo","alt","Spinner","spinner","className","Item","item","thumbnail","path","extension","name","description","ItemGrid","characters","isLoading","map","id","Search","getQuery","getFilter","useState","text","setText","isActive","setActive","activeBtn","setActiveBtn","handleClick","filter","onClick","href","type","placeholder","value","onChange","e","q","target","autoFocus","aria-label","width","height","viewBox","d","Main","setCharacters","setIsLoading","query","setQuery","setFilter","useEffect","axios","params","Object","assign","apikey","process","ts","hash","nameStartsWith","then","res","data","results","console","log","catch","err","callback","delay","timeoutID","args","clearTimeout","setTimeout","debounce","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4071be52.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7ef3043b.png\";","import logo from '../../img/logo.png'\n\nconst Header = () => {\n\n    return (\n        <header>\n            <img src={logo} alt=\"Marvel + React logo\"></img>\n        </header>\n    )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react'\nimport spinner from '../../img/spinner.gif'\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img\n                src={spinner}\n                alt=\"loading wheel\"\n                className=\"loading\">\n            </img>\n        </div>\n    )\n}\n\nexport default Spinner\n","import React from 'react'\n\nconst Item = ({ item }) => {\n    return (\n        <div className='card'>\n            <div className='card-inner'>\n                <div className='card-front'>\n                    <img src={`${item.thumbnail.path}/standard_fantastic.${item.thumbnail.extension} `} alt='' />\n                </div>\n                <div className='card-back'>\n                    <h1 className=\"center\">{item.name}</h1>\n                    <ul>\n                        <li>\n                            <strong>Character Name:</strong> {item.name}\n                        </li>\n                        <li>\n                            <strong>Description:</strong> {item.description}\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Item\n","import React from 'react'\nimport Spinner from '../ui/Spinner'\nimport Item from './Item'\n\nconst ItemGrid = ({ characters, isLoading }) => {\n\n    return isLoading ? (\n        <Spinner></Spinner>\n    ) : (\n            <section className='cards'>\n                {characters.map((item) => (\n                    <Item key={item.id} item={item}></Item>\n                ))}\n            </section>\n        )\n}\n\nexport default ItemGrid","import React, { useState } from 'react';\n\nconst Search = ({ getQuery, getFilter }) => {\n\n    const [text, setText] = useState('')\n    const [isActive, setActive] = useState(\"false\");\n    const [activeBtn, setActiveBtn] =  useState('characters')\n\n    const handleToggle = () => {\n      setActive(!isActive);\n    };    \n\n    const onChange = (q) => {\n        setText(q)\n        getQuery(q)\n    }\n\n    let handleClick = (filter) => {\n        getFilter(filter)\n        setActiveBtn(filter)\n    }\n\n    return (\n\n        <nav className=\"navbar\">\n            <ul className={`navlist ${isActive ? \"closed\" : \"open\"}`}>\n                <li>\n                    <button className={activeBtn === 'characters' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('characters')} href=\"/characters\">Characters</button >\n                </li>\n                <li>\n                    <button className={activeBtn === 'comics' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('comics')} href=\"/comics\">Comics</button >\n                </li>\n                <li>\n                    <button className={activeBtn === 'creators' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('creators')} href=\"/creators\">Creators</button >\n                </li>\n                <li>\n                    <button className={activeBtn === 'events' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('events')} href=\"/events\">Events</button >\n                </li>\n                <li>\n                    <button className={activeBtn === 'series' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('series')} href=\"/series\">Series</button >\n                </li>\n                <li>\n                    <button className={activeBtn === 'stories' ? \"active\" : \"inactive\"} onClick={(filter) => handleClick('stories')} href=\"/stories\">Stories</button >\n                </li>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Search...\"\n                    value={text}\n                    onChange={(e) => onChange(e.target.value)}\n                    autoFocus\n                />\n            </ul>\n            <button className={`menu ${isActive ? \"\" : \"opened\"}`} onClick={handleToggle} aria-label=\"Main Menu\">\n                <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\">\n                    <path className=\"line line1\" d=\"M 20,29.000046 H 80.000231 C 80.000231,29.000046 94.498839,28.817352 94.532987,66.711331 94.543142,77.980673 90.966081,81.670246 85.259173,81.668997 79.552261,81.667751 75.000211,74.999942 75.000211,74.999942 L 25.000021,25.000058\" />\n                    <path className=\"line line2\" d=\"M 20,50 H 80\" />\n                    <path className=\"line line3\" d=\"M 20,70.999954 H 80.000231 C 80.000231,70.999954 94.498839,71.182648 94.532987,33.288669 94.543142,22.019327 90.966081,18.329754 85.259173,18.331003 79.552261,18.332249 75.000211,25.000058 75.000211,25.000058 L 25.000021,74.999942\" />\n                </svg>\n            </button>\n        </nav >\n\n    )\n}\n\nexport default Search\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport Header from './ui/Header';\nimport ItemGrid from './Items/ItemGrid';\nimport Search from './ui/Search';\n\nexport const Main = () => {\n\n    // State variables\n    const [characters, setCharacters] = useState([])\n    const [isLoading, setIsLoading] = useState(true)\n    const [query, setQuery] = useState('')\n    const [filter, setFilter] = useState('characters')\n\n    // Debouncing Function, adds 1s delay before function since last call\n    const debounce = (callback, delay) => {\n        let timeoutID;\n        return function (...args) {\n            if (timeoutID) {\n                clearTimeout(timeoutID)\n            }\n            timeoutID = setTimeout(() => {\n                callback(...args)\n            }, delay)\n        }\n    }\n\n    // Primary API call\n    // Searchs based on 'filter' state \n    //possible values (characters, comics, creators, events, series, stories)\n    // Searches also based on 'query' state, a searchable value\n    useEffect(() => {\n        axios(`https://gateway.marvel.com/v1/public/` + filter + `?`, {\n            params: Object.assign({\n                apikey: process.env.REACT_APP_APIKEY,\n                ts: '1',\n                hash: 'd4db04e586186471a9f4b0d9fc0f1697'\n            },\n                query !== '' ? { nameStartsWith: query } : null\n            )\n        }).then(res => {\n            setCharacters(res.data.data.results)\n            setIsLoading(false)\n            console.log(res)\n\n        }).catch(function (err) {\n            console.log(err);\n        })\n\n    }, [query, filter])\n\n    return (\n        <div>\n            <Search getQuery={debounce((q) => setQuery(q), 1000)} getFilter={(filter) => setFilter(filter)} />\n            <Header />\n            <div className=\"card-container\">\n                <ItemGrid isLoading={isLoading} characters={characters} />\n            </div>\n        </div>\n    )\n}\n","import './App.css';\nimport React from 'react'\nimport { Main } from './components/Main';\n\nconst App = () => {\n\n  return (\n      <div className=\"container\">\n        <Main></Main>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}